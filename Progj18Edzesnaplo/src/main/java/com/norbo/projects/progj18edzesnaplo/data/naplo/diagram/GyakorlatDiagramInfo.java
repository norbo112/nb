/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.norbo.projects.progj18edzesnaplo.data.naplo.diagram;

import com.norbo.projects.progj18edzesnaplo.data.IGyakorlat;
import com.norbo.projects.progj18edzesnaplo.data.naplo.SorozatInterface;
import com.norbo.projects.progj18edzesnaplo.dodata.sorozat.JsonSorozatTransform;
import java.io.IOException;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.AbstractListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author igloi
 */
public class GyakorlatDiagramInfo extends javax.swing.JDialog {
    /**
     * Gyakorlat lista megjelenítése JList-ben
     */
    private class GYListModel extends AbstractListModel<String> {
        private List<IGyakorlat> gyaklist;

        public GYListModel(List<IGyakorlat> gyaklist) {
            this.gyaklist = gyaklist;
        }

        @Override
        public int getSize() {
            return gyaklist.size();
        }

        @Override
        public String getElementAt(int index) {
            return gyaklist.get(index).getIzomcsoport()+" - "+gyaklist.get(index).getMegnevezes();
        }
        
        public IGyakorlat getGyakorlatAt(int index) {
            return gyaklist.get(index);
        }
    }
    
    private class AdatBetolto extends SwingWorker<List<SorozatInterface>, String> {
        private List<String> filok;
        private IGyakorlat keresendo;

        public AdatBetolto(List<String> filok, IGyakorlat keresendo) {
            this.filok = filok;
            this.keresendo = keresendo;
        }

        @Override
        protected List<SorozatInterface> doInBackground() throws Exception {
            statusPanel.setVisible(true);
            List<SorozatInterface> listak = new ArrayList<>();
            for (String path: filok) {
                List<SorozatInterface> sorozat = new JsonSorozatTransform().betolt(path);
                List<SorozatInterface> collect = sorozat.stream().filter( p-> p.getGyakorlat().equals(keresendo)).collect(Collectors.toList());
                listak.addAll(collect);
                
                setProgress(listak.size());
                publish(path+" fájl feldolgozása");
                
                Thread.sleep(2000);
            }
            return listak;
        }

        @Override
        protected void done() {
            statusPanel.setVisible(false);
            try {
                tableModel.setSorozatLista(get());
            } catch (InterruptedException ex) {
                Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ExecutionException ex) {
                Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(GyakorlatDiagramInfo.this, "Adatok vizsgálata megtörtént","Info",
                    JOptionPane.INFORMATION_MESSAGE);
        }

        @Override
        protected void process(List<String> chunks) {
            lblFajlFeldolgoz.setText(chunks.get(0));
        }
        
        
        
    }
    
    private List<IGyakorlat> gyakorlatLista;
    private GyakorlatDiagramTableModel tableModel;
    private AdatLabel szazalekAdatLabel;

    public GyakorlatDiagramInfo(JFrame parent, List<IGyakorlat> gyakorlatLista) {
        super(parent, false);
        this.gyakorlatLista = gyakorlatLista;
        initComponents();
        initMe();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        statusPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        progressBar = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lblFajlFeldolgoz = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        gyakorlatJList = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sorozatTabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Megmozgatott súly");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        statusPanel.setBackground(new java.awt.Color(0, 102, 204));
        statusPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        statusPanel.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Adatok betöltése");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Fájl amin épp dolgozunk:");

        progressBar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        progressBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loader.gif"))); // NOI18N

        lblFajlFeldolgoz.setEditable(false);
        lblFajlFeldolgoz.setColumns(20);
        lblFajlFeldolgoz.setLineWrap(true);
        lblFajlFeldolgoz.setRows(5);
        lblFajlFeldolgoz.setWrapStyleWord(true);
        jScrollPane3.setViewportView(lblFajlFeldolgoz);

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(progressBar))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gyakorlatJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        gyakorlatJList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gyakorlatJListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gyakorlatJList);

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Megtekintő", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        sorozatTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(sorozatTabla);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void gyakorlatJListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gyakorlatJListMouseClicked
        if(evt.getClickCount() == 2) {
            try {
            AdatBetolto adatBetolto = new AdatBetolto(getMentettNaploLista(), 
                    ((GYListModel)gyakorlatJList.getModel()).getGyakorlatAt(
                    gyakorlatJList.getSelectedIndex()));
            adatBetolto.execute();
            } catch (IOException e) {
                Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_gyakorlatJListMouseClicked

    public static void showDialog(JFrame parent, final List<IGyakorlat> gyaklista) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GyakorlatDiagramInfo dialog = new GyakorlatDiagramInfo(parent, gyaklista);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        dialog.setVisible(false);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> gyakorlatJList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea lblFajlFeldolgoz;
    private javax.swing.JLabel progressBar;
    private javax.swing.JTable sorozatTabla;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private void initMe() {
        statusPanel.setVisible(false);
        
        //lista
        gyakorlatJList.setModel(new GYListModel(gyakorlatLista));
        
        //táblázat beállítása
        tableModel = new GyakorlatDiagramTableModel();
        szazalekAdatLabel = new AdatLabel();
        sorozatTabla.setModel(tableModel);
        sorozatTabla.setDefaultRenderer(int[].class, szazalekAdatLabel);
    }
    
    /**
     * Az egész ami mentve van az adott könyvtárba - betöltésre kerül
     * @return
     * @throws IOException 
     */
    private List<String> getMentettNaploLista() throws IOException {
        List<String> lists = new ArrayList<>();
        java.nio.file.Path userhome = Paths.get(System.getProperty("user.dir"));
        
        try (DirectoryStream<java.nio.file.Path> dstream = Files.newDirectoryStream((java.nio.file.Path) userhome)) {
            for (java.nio.file.Path path : dstream) {
                if(path.toString().endsWith("_edzesnap.npl")) {
                    lists.add(path.toString());
                }
            }
        }
        
        return lists;
    }
}
