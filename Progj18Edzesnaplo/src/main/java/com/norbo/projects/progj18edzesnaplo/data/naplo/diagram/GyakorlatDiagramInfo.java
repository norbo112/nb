/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.norbo.projects.progj18edzesnaplo.data.naplo.diagram;

import com.norbo.projects.progj18edzesnaplo.data.IGyakorlat;
import com.norbo.projects.progj18edzesnaplo.data.naplo.SorozatInterface;
import com.norbo.projects.progj18edzesnaplo.dodata.sorozat.JsonSorozatTransform;
import java.awt.Color;
import java.io.IOException;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutionException;
import java.util.function.BiPredicate;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.AbstractListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.SwingWorker;
import javax.swing.border.LineBorder;

/**
 *
 * @author igloi
 */
public class GyakorlatDiagramInfo extends javax.swing.JDialog {
    /**
     * Gyakorlat lista megjelenítése JList-ben
     */
    private class GYListModel extends AbstractListModel<String> {
        private List<IGyakorlat> gyaklist;

        public GYListModel(List<IGyakorlat> gyaklist) {
            this.gyaklist = gyaklist;
        }

        @Override
        public int getSize() {
            return gyaklist.size();
        }

        @Override
        public String getElementAt(int index) {
            return gyaklist.get(index).toString();
        }
        
        public IGyakorlat getGyakorlatAt(int index) {
            return gyaklist.get(index);
        }
    }
    
    private class AdatBetolto extends SwingWorker<List<TobbValasztoSorozat>, String> {
        private List<String> filok;
        private List<IGyakorlat> keresendo;
        private BiPredicate<IGyakorlat, IGyakorlat> gyakvizsg = (st, vi)-> {
            return st.getMegnevezes().equals(vi.getMegnevezes());
        };

        public AdatBetolto(List<String> filok, List<IGyakorlat> keresendo) {
            this.filok = filok;
            this.keresendo = keresendo;
        }

        @Override
        protected List<TobbValasztoSorozat> doInBackground() throws Exception {
            statusPanel.setVisible(true);
            List<TobbValasztoSorozat> listak = new ArrayList<>();
            for(IGyakorlat gy: keresendo) {
                List<SorozatInterface> egyGyak = new ArrayList<>();
                for (String path: filok) {
                    List<SorozatInterface> sorozat = new JsonSorozatTransform().betolt(path);
                    List<SorozatInterface> collect = sorozat.stream().filter(
                            p -> gyakvizsg.test(p.getGyakorlat(), gy)).collect(Collectors.toList());
                    egyGyak.addAll(collect);

                    setProgress(listak.size());
                    publish(path + " fájl feldolgozása");
                }
                listak.add(new TobbValasztoSorozat(egyGyak, gy.getMegnevezes()));
                Thread.sleep(3000);
            }
            return listak;
        }

        @Override
        protected void done() {
            statusPanel.setVisible(false);
            try {
                //tableModel.setSorozatLista(get());
                //külön táblázatok hozzáadása 
                tablaKeszitoAblakhoz(get());
            } catch (InterruptedException ex) {
                Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ExecutionException ex) {
                Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(Level.SEVERE, null, ex);
            }
//            JOptionPane.showMessageDialog(GyakorlatDiagramInfo.this, "Adatok vizsgálata megtörtént","Info",
//                    JOptionPane.INFORMATION_MESSAGE);
        }

        @Override
        protected void process(List<String> chunks) {
            lblFajlFeldolgoz.setText(chunks.get(0));
        }
    }
    
    private List<IGyakorlat> gyakorlatLista;
    private GyakorlatDiagramTableModel tableModel;
    private AdatLabel szazalekAdatLabel;

    public GyakorlatDiagramInfo(JFrame parent, List<IGyakorlat> gyakorlatLista) {
        super(parent, false);
        this.gyakorlatLista = gyakorlatLista;
        initComponents();
        setIconImage(new ImageIcon(getClass().getClassLoader().getResource("enlogo.png")).getImage());
        initMe();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        statusPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        progressBar = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lblFajlFeldolgoz = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        gyakorlatJList = new javax.swing.JList<>();
        megtekinto = new javax.swing.JPanel();
        megtekintoScroll = new javax.swing.JScrollPane();
        mpanel = new javax.swing.JPanel();
        btnTobbValasztas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Megmozgatott súly");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        statusPanel.setBackground(new java.awt.Color(0, 102, 204));
        statusPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        statusPanel.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Adatok betöltése");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Fájl amin épp dolgozunk:");

        progressBar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        progressBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loader.gif"))); // NOI18N

        lblFajlFeldolgoz.setEditable(false);
        lblFajlFeldolgoz.setColumns(20);
        lblFajlFeldolgoz.setLineWrap(true);
        lblFajlFeldolgoz.setRows(5);
        lblFajlFeldolgoz.setWrapStyleWord(true);
        jScrollPane3.setViewportView(lblFajlFeldolgoz);

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(statusPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(progressBar))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gyakorlatJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        gyakorlatJList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gyakorlatJListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gyakorlatJList);

        megtekinto.setBackground(new java.awt.Color(153, 204, 255));
        megtekinto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Megtekintő", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        megtekintoScroll.setBackground(new java.awt.Color(0, 102, 153));
        megtekintoScroll.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)));
        megtekintoScroll.setForeground(new java.awt.Color(255, 255, 255));

        mpanel.setBackground(new java.awt.Color(153, 204, 255));
        mpanel.setLayout(new javax.swing.BoxLayout(mpanel, javax.swing.BoxLayout.PAGE_AXIS));
        megtekintoScroll.setViewportView(mpanel);

        javax.swing.GroupLayout megtekintoLayout = new javax.swing.GroupLayout(megtekinto);
        megtekinto.setLayout(megtekintoLayout);
        megtekintoLayout.setHorizontalGroup(
            megtekintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(megtekintoScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
        );
        megtekintoLayout.setVerticalGroup(
            megtekintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(megtekintoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(megtekintoScroll)
                .addContainerGap())
        );

        btnTobbValasztas.setBackground(new java.awt.Color(0, 153, 255));
        btnTobbValasztas.setForeground(new java.awt.Color(255, 255, 255));
        btnTobbValasztas.setText("Több választás kiértékelése");
        btnTobbValasztas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTobbValasztasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTobbValasztas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                    .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(megtekinto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTobbValasztas, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(megtekinto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void gyakorlatJListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gyakorlatJListMouseClicked
        btnTobbValasztas.setEnabled(gyakorlatJList.getSelectedIndices().length > 1);
        
        if(evt.getClickCount() == 2) {
            loadGyakKivalasztas();
        }
    }//GEN-LAST:event_gyakorlatJListMouseClicked

    private void btnTobbValasztasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTobbValasztasActionPerformed
        loadGyakKivalasztas();
    }//GEN-LAST:event_btnTobbValasztasActionPerformed

    private void loadGyakKivalasztas() {
        try {
            List<IGyakorlat> gyaksik = new ArrayList<>();
            int[] selIdx = gyakorlatJList.getSelectedIndices();
            for (int i = 0; i < selIdx.length; i++) {
                gyaksik.add(((GYListModel)gyakorlatJList.getModel()).getGyakorlatAt(selIdx[i]));
            }
            
            AdatBetolto adatBetolto = new AdatBetolto(getMentettNaploLista(), gyaksik);
            adatBetolto.execute();
        } catch (IOException e) {
            Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    public static void showDialog(JFrame parent, final List<IGyakorlat> gyaklista) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GyakorlatDiagramInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GyakorlatDiagramInfo dialog = new GyakorlatDiagramInfo(parent, gyaklista);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        dialog.setVisible(false);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTobbValasztas;
    private javax.swing.JList<String> gyakorlatJList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea lblFajlFeldolgoz;
    private javax.swing.JPanel megtekinto;
    private javax.swing.JScrollPane megtekintoScroll;
    private javax.swing.JPanel mpanel;
    private javax.swing.JLabel progressBar;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private void initMe() {
        statusPanel.setVisible(false);
        
        //lista
        gyakorlatJList.setModel(new GYListModel(gyakorlatLista));
        
        btnTobbValasztas.setEnabled(false);
    }

    private void tablaKeszitoAblakhoz(List<TobbValasztoSorozat> sorozatok) {
        int x = 10;
        int y = 20;

        mpanel.removeAll();
        
        for (TobbValasztoSorozat sorV : sorozatok) {
            if(!sorV.getSorozatok().isEmpty()) {
                JScrollPane sp = new JScrollPane();
                JTable table = new JTable(new GyakorlatDiagramTableModel());
                ((GyakorlatDiagramTableModel) table.getModel()).setSorozatLista(sorV.getSorozatok());
                table.setDefaultRenderer(int[].class, new AdatLabel());
                table.setBorder(new LineBorder(Color.BLACK, 1, true));
                
                sp.setViewportView(table);
                sp.setBackground(tablaSzinHatter);
                
                mpanel.add(new JLabel(sorV.getName(), SwingConstants.CENTER));
                mpanel.add(sp);
                
                y += 150;
            } else {
                JOptionPane.showMessageDialog(null,sorV.getName()+" gyakorlatról nincs adat rögzítve!" ,"Info",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
        megtekintoScroll.validate();
        //megtekinto.validate();
    }
    private final Color tablaSzinHatter = new Color(153,204,255);
    
    /**
     * Az egész ami mentve van az adott könyvtárba - betöltésre kerül
     * @return
     * @throws IOException 
     */
    private List<String> getMentettNaploLista() throws IOException {
        List<String> lists = new ArrayList<>();
        java.nio.file.Path userhome = Paths.get(System.getProperty("user.dir"));
        
        try (DirectoryStream<java.nio.file.Path> dstream = Files.newDirectoryStream((java.nio.file.Path) userhome)) {
            for (java.nio.file.Path path : dstream) {
                if(path.toString().endsWith("_edzesnap.npl")) {
                    lists.add(path.toString());
                }
            }
        }
        
        return lists;
    }
}
